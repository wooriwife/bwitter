{"version":3,"sources":["fbase.js","components/AuthForm.js","routes/Auth.js","components/Bweet.js","components/Bweetfactory.js","routes/Home.js","components/Navigation.js","routes/Profile.js","components/Router.js","components/App.js","index.js"],"names":["firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","authService","auth","dbService","firestore","storageService","storage","AuthForm","useState","email","setEmail","password","setPassword","error","setError","newAccount","setNewAccount","onChange","event","target","name","value","onSubmit","e","a","preventDefault","createUserWithEmailAndPassword","data","signInWithEmailAndPassword","console","log","message","type","placeholder","required","onClick","prev","Auth","onSocialClick","provider","GoogleAuthProvider","OAuthProvider","GithubAuthProvider","signInWithPopup","result","user","Bweet","bweetObj","isOwner","edting","setEdting","text","newBweet","setNewBweet","onDeleteClick","window","confirm","doc","id","delete","refFromURL","attachmentUrl","toggleEdting","update","src","height","BweetFactory","userObj","bweet","setBweet","attachment","setAttachment","attachmentRef","ref","child","uid","uuidv4","putString","response","getDownloadURL","createdAt","Date","now","creatorId","collection","add","maxLength","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","currentTarget","readAsDataURL","width","Home","bweets","setBweets","useEffect","onSnapshot","snapshot","nweetArray","docs","map","Navigation","to","displayName","Profile","refreshUser","history","useHistory","newDisplayName","setNewDisplayName","onSignOut","signOut","catch","err","push","updateProfile","AppRouter","isLoggedIn","exact","path","App","init","setInit","setUserObj","onAuthStateChanged","args","currentUser","Boolean","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c65969ca.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\nimport \"firebase/storage\";\n\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_API_KEY,\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n  projectId: process.env.REACT_APP_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_APP_ID,\n};\n\nfirebase.initializeApp(firebaseConfig);\n\nexport const firebaseInstance = firebase;\n\nexport const authService = firebase.auth();\nexport const dbService = firebase.firestore();\nexport const storageService = firebase.storage();\n","import { authService } from \"fbase\";\nimport React, { useState } from \"react\";\n\nconst AuthForm = () => {\n  const [email, setEmail] = useState(\"\"); //react hooks: state management\n  const [password, setPassword] = useState(\"\"); //react hooks: state management\n  const [error, setError] = useState(\"\"); //set the empty message\n  const [newAccount, setNewAccount] = useState(true); //react hooks.... if it's new account or not.\n\n  const toggleAccount = () => setNewAccount((prev) => !prev);\n\n  const onChange = (event) => {\n    const {\n      // event will return an instance of target component\n      target: { name, value }, //es6 magic, store the name and value of the component\n    } = event;\n    if (name === \"email\") {\n      //if the name of the component is email\n      setEmail(value); //set state using registed method on react hooks.\n    } else if (name === \"password\") {\n      setPassword(value);\n    }\n  };\n  const onSubmit = async (e) => {\n    e.preventDefault(); //I don't want the default thing to happen,, let me handle this...\n    try {\n      let data;\n      if (newAccount) {\n        //create user\n        //createUserWithEmailAndPassword\n        data = await authService.createUserWithEmailAndPassword(\n          email,\n          password\n        );\n      } else {\n        //login\n        data = await authService.signInWithEmailAndPassword(email, password);\n      }\n      console.log(\"login data:\", data);\n    } catch (error) {\n      setError(error.message);\n    }\n  };\n  return (\n    <>\n      <form onSubmit={onSubmit}>\n        <input\n          name=\"email\" // component name is email\n          type=\"email\"\n          placeholder=\"Email\"\n          required\n          value={email} // email on react hooks\n          onChange={onChange}\n        />\n        <input\n          name=\"password\" // component name is password\n          type=\"password\"\n          placeholder=\"Password\"\n          required\n          value={password} //password on react hooks\n          onChange={onChange}\n        />\n        <input\n          type=\"submit\"\n          value={newAccount ? \"Create Account\" : \"Sign In\"}\n        />\n        {error}\n      </form>\n      <span onClick={toggleAccount}>\n        {newAccount ? \"Sign In\" : \"Create Account\"}\n      </span>\n    </>\n  );\n};\n\nexport default AuthForm;\n","import AuthForm from \"components/AuthForm\";\nimport { firebaseInstance, authService } from \"fbase\";\nimport React, { useState } from \"react\";\n\nconst Auth = () => {\n  const [newAccount, setNewAccount] = useState(true); //react hooks.... if it's new account or not.\n\n  const toggleAccount = () => setNewAccount((prev) => !prev);\n  const onSocialClick = async (e) => {\n    const {\n      target: { name },\n    } = e;\n    let provider;\n    if (name === \"google\") {\n      provider = new firebaseInstance.auth.GoogleAuthProvider();\n    } else if (name === \"apple\") {\n      provider = new firebaseInstance.auth.OAuthProvider(\"apple.com\");\n    } else if (name === \"github\") {\n      provider = new firebaseInstance.auth.GithubAuthProvider();\n    }\n    try {\n      const result = await authService.signInWithPopup(provider);\n      console.log(result.user.name);\n    } catch (error) {\n      console.log(error.message);\n    }\n  };\n  return (\n    <div>\n      <AuthForm />\n      <div>\n        <button onClick={onSocialClick} name=\"google\">\n          Continue with Google\n        </button>\n        <button onClick={onSocialClick} name=\"github\">\n          Continue with Github\n        </button>\n        <button onClick={onSocialClick} name=\"apple\">\n          Continew with Apple\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default Auth;\n","import { dbService, storageService } from \"fbase\";\nimport React, { useState } from \"react\";\n\nconst Bweet = ({ bweetObj, isOwner }) => {\n  const [edting, setEdting] = useState(false);\n  const [newBweet, setNewBweet] = useState(bweetObj.text);\n\n  const onDeleteClick = async () => {\n    const ok = window.confirm(\"Are you sure you want to delete this bweet?\");\n    if (ok) {\n      await dbService.doc(`bweets/${bweetObj.id}`).delete();\n      await storageService.refFromURL(bweetObj.attachmentUrl).delete();\n    }\n  };\n  const toggleEdting = () => setEdting((prev) => !prev);\n  const onSubmit = (event) => {\n    event.preventDefault();\n    dbService.doc(`bweets/${bweetObj.id}`).update({\n      text: newBweet,\n    });\n    toggleEdting();\n  };\n  const onChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setNewBweet(value);\n  };\n  return (\n    <div>\n      {edting ? (\n        <>\n          <form onSubmit={onSubmit}>\n            <input\n              onChange={onChange}\n              type=\"text\"\n              placeholder=\"Edit your bweet.\"\n              value={newBweet}\n              required\n            />\n            <input type=\"submit\" value=\"Update\" />\n          </form>\n\n          <button onClick={toggleEdting}>Cancel</button>\n        </>\n      ) : (\n        <>\n          <h4>{bweetObj.text}</h4>\n          {bweetObj.attachmentUrl && (\n            <img src={bweetObj.attachmentUrl} height=\"100px\" />\n          )}\n          {isOwner && (\n            <>\n              <button onClick={onDeleteClick}>Delete</button>\n              <button onClick={toggleEdting}>Edit</button>\n            </>\n          )}\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default Bweet;\n","import { dbService, storageService } from \"fbase\";\nimport React, { useState } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nconst BweetFactory = ({ userObj }) => {\n  const [bweet, setBweet] = useState(\"\");\n  const [attachment, setAttachment] = useState(\"\");\n\n  const onSubmit = async (e) => {\n    e.preventDefault();\n    let attachmentUrl = \"\";\n    if (attachment !== \"\") {\n      const attachmentRef = storageService\n        .ref()\n        .child(`${userObj.uid}/${uuidv4()}`);\n      const response = await attachmentRef.putString(attachment, \"data_url\");\n      attachmentUrl = await response.ref.getDownloadURL();\n    }\n\n    const bweetObj = {\n      text: bweet,\n      createdAt: Date.now(),\n      creatorId: userObj.uid,\n      attachmentUrl,\n    };\n    await dbService.collection(\"bweets\").add(bweetObj);\n    setBweet(\"\");\n    setAttachment(\"\");\n  };\n\n  const onChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setBweet(value);\n  };\n\n  const onFileChange = (event) => {\n    const {\n      target: { files },\n    } = event;\n    const theFile = files[0];\n    const reader = new FileReader();\n    reader.onloadend = (finishedEvent) => {\n      const {\n        currentTarget: { result },\n      } = finishedEvent;\n      setAttachment(result);\n    };\n    reader.readAsDataURL(theFile);\n  };\n  const onClearAttachment = () => {\n    setAttachment(null);\n  };\n  return (\n    <form onSubmit={onSubmit}>\n      <input\n        name={bweet}\n        value={bweet}\n        onChange={onChange}\n        type=\"text\"\n        placeholder=\"What's on your mind?\"\n        maxLength={120}\n      />\n      <input type=\"file\" accept=\"image/*\" onChange={onFileChange} />\n      <input type=\"submit\" value=\"Bweet\" />\n      {attachment && (\n        <div>\n          <img src={attachment} width=\"50px\" />\n          <button onClick={onClearAttachment}>Clear</button>\n        </div>\n      )}\n    </form>\n  );\n};\n\nexport default BweetFactory;\n","import React, { useEffect, useState } from \"react\";\nimport { dbService, storageService } from \"fbase\";\nimport Bweet from \"components/Bweet\";\nimport BweetFactory from \"components/Bweetfactory\";\n\nconst Home = ({ userObj }) => {\n  // const onSignOut = async () => {\n  //   await firebaseInstance\n  //     .auth()\n  //     .signOut()\n  //     .catch((error) => {\n  //       console.log(error);\n  //     });\n  //   console.log(\"Signed out successfully!!\");\n  // };\n\n  const [bweets, setBweets] = useState([]);\n\n  useEffect(() => {\n    dbService.collection(\"bweets\").onSnapshot((snapshot) => {\n      const nweetArray = snapshot.docs.map((doc) => ({\n        id: doc.id,\n        ...doc.data(),\n      }));\n      setBweets(nweetArray);\n    });\n  }, []);\n\n  return (\n    <div>\n      <BweetFactory userObj={userObj} />\n      <div>\n        {bweets.map((bweet) => (\n          <Bweet\n            key={bweet.id}\n            bweetObj={bweet}\n            isOwner={bweet.creatorId === userObj.uid}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\nexport default Home;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst Navigation = ({ userObj }) => {\n  return (\n    <nav>\n      <ul>\n        <li>\n          <Link to=\"/\">Home</Link>\n        </li>\n        <li>\n          <Link to=\"/profile\">{userObj.displayName}의 Profile</Link>\n        </li>\n      </ul>\n    </nav>\n  );\n};\n\nexport default Navigation;\n","import { dbService, firebaseInstance } from \"fbase\";\nimport React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nconst Profile = ({ refreshUser, userObj }) => {\n  const history = useHistory();\n  const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\n  const onSignOut = async () => {\n    await firebaseInstance\n      .auth()\n      .signOut()\n      .catch((err) => {\n        console.log(err);\n      });\n    history.push(\"/\");\n  };\n  // const getMyBweets = async () => {\n  //   const bweets = await dbService\n  //     .collection(\"bweets\")\n  //     .where(\"creatorId\", \"==\", userObj.uid)\n  //     .orderBy(\"createdAt\")\n  //     .get();\n  //   console.log(bweets.docs.map((doc) => doc.data()));\n  // };\n  // useEffect(() => {\n  //   getMyBweets();\n  // }, []);\n\n  const onChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setNewDisplayName(value);\n  };\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    if (userObj.displayName !== newDisplayName) {\n      await userObj.updateProfile({\n        displayName: newDisplayName,\n      });\n      refreshUser();\n    }\n  };\n  return (\n    <>\n      <form onSubmit={onSubmit}>\n        <input\n          onChange={onChange}\n          type=\"text\"\n          placeholder=\"Display name\"\n          value={newDisplayName}\n        />\n        <input type=\"submit\" value=\"Update Profile\" />\n      </form>\n      <button onClick={onSignOut}>Sign Out</button>\n    </>\n  );\n};\nexport default Profile;\n","import React from \"react\";\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Auth from \"routes/Auth\";\nimport Home from \"routes/Home\";\nimport Navigation from \"components/Navigation\";\nimport Profile from \"routes/Profile\";\n\nconst AppRouter = ({ refreshUser, isLoggedIn, userObj }) => {\n  return (\n    <Router>\n      {isLoggedIn && <Navigation userObj={userObj} />}\n      <Switch>\n        {isLoggedIn ? (\n          <>\n            <Route exact path=\"/\">\n              <Home userObj={userObj} />\n            </Route>\n            <Route exact path=\"/Profile\">\n              <Profile userObj={userObj} refreshUser={refreshUser} />\n            </Route>\n          </>\n        ) : (\n          <>\n            <Route exact path=\"/\">\n              <Auth />\n            </Route>\n          </>\n        )}\n      </Switch>\n    </Router>\n  );\n};\n\nexport default AppRouter;\n","import { useEffect, useState } from \"react\";\nimport AppRouter from \"components/Router\";\nimport { authService } from \"fbase\";\n\nfunction App() {\n  const [init, setInit] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n  useEffect(() => {\n    authService.onAuthStateChanged((user) => {\n      if (user) {\n        //setUserObj(user);\n        setUserObj({\n          displayName: user.displayName,\n          uid: user.uid,\n          updateProfile: (args) => user.updateProfile(args),\n        });\n      } else {\n        setUserObj(null);\n      }\n      setInit(true);\n    }); //this needs callback.\n  }, []);\n  const refreshUser = () => {\n    const user = authService.currentUser;\n    //setUserObj(Object.assign({}, user));//this is some weird way to use for the production\n    setUserObj({\n      displayName: user.displayName,\n      uid: user.uid,\n      updateProfile: (args) => user.updateProfile(args),\n    });\n  };\n  return (\n    <>\n      {init ? (\n        <AppRouter\n          refreshUser={refreshUser}\n          isLoggedIn={Boolean(userObj)}\n          userObj={userObj}\n        />\n      ) : (\n        \"Initailizing...\"\n      )}\n      {/* <footer>&copy;{new Date().getFullYear()} Bwitter</footer> */}\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}